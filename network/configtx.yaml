---
Capabilities:
  Channel: &ChannelCapabilities
    V1_3: true
  Orderer: &OrdererCapabilities
    V1_1: true
  Application: &ApplicationCapabilities
    V1_3: true

Organizations:
  - &Orderer
    Name: Orderer
    ID: OrdererMSP
    MSPDir: crypto-config/ordererOrganizations/example-com/msp
    Policies: 
      Readers:
        Type: Signature
        Rule: "OR('OrdererMSP.member')"
      Writers:
        Type: Signature
        Rule: "OR('OrdererMSP.member')"
      Admins:
        Type: Signature
        Rule: "OR('OrdererMSP.admin')"

  - &org1
    Name: org1
    ID: org1MSP
    MSPDir: crypto-config/peerOrganizations/org1-example-com/msp

    Policies:
      Readers:
        Type: Signature
        Rule: "OR('org1MSP.member')"
      Writers:
        Type: Signature
        Rule: "OR('org1MSP.member')"
      Admins:
        Type: Signature
        Rule: "OR('org1MSP.admin')"

    AnchorPeers:
      - Host: peer0-org1-example-com
        Port: 7051

  - &org2
    Name: org2
    ID: org2MSP
    MSPDir: crypto-config/peerOrganizations/org2-domain-com/msp
    Policies: 
      Readers:
        Type: Signature
        Rule: "OR('org2MSP.member')"
      Writers:
        Type: Signature
        Rule: "OR('org2MSP.member')"
      Admins:
        Type: Signature
        Rule: "OR('org2MSP.admin')"

    AnchorPeers:
      - Host: peer0-org2-domain-com
        Port: 7051

  - &org3
    Name: org3
    ID: org3MSP
    MSPDir: crypto-config/peerOrganizations/org3-be-com/msp
    Policies: 
      Readers:
        Type: Signature
        Rule: "OR('org3MSP.member')"
      Writers:
        Type: Signature
        Rule: "OR('org3MSP.member')"
      Admins:
        Type: Signature
        Rule: "OR('org3MSP.admin')"
    AnchorPeers:
      - Host: peer0-org3-be-com
        Port: 7051

Orderer: &OrdererDefaults
  OrdererType: kafka
  Addresses:
    - orderer0-example-com:7050
  BatchTimeout: 1.5s
  BatchSize:
    MaxMessageCount: 20
    AbsoluteMaxBytes: 98 MB
    PreferredMaxBytes: 512 KB
  Kafka:
    Brokers:
      - kafka0-example-com:9092
      - kafka1-example-com:9092
      - kafka2-example-com:9092
      - kafka3-example-com:9092
  Policies:
    Readers:
      Type: ImplicitMeta
      Rule: "ANY Readers"
    Writers:
      Type: ImplicitMeta
      Rule: "ANY Writers"
    Admins:
      Type: Signature
      Rule: "OR('org1MSP.admin','ordererMSP.member')"
    BlockValidation:
      Type: ImplicitMeta
      Rule: "ANY Writers"
  Organizations:

Application: &ApplicationDefaults  
  ACLs: &ACLsDefault
    #---Lifecycle System Chaincode (lscc) function to policy mapping for access control---#
    lscc/ChaincodeExists: /Channel/Application/Readers

    # ACL policy for lscc's "getdepspec" function
    lscc/GetDeploymentSpec: /Channel/Application/Readers

    # ACL policy for lscc's "getccdata" function
    lscc/GetChaincodeData: /Channel/Application/Readers

    # ACL Policy for lscc's "getchaincodes" function
    lscc/GetInstantiatedChaincodes: /Channel/Application/Readers

    #---Query System Chaincode (qscc) function to policy mapping for access control---#

    # ACL policy for qscc's "GetChainInfo" function
    qscc/GetChainInfo: /Channel/Application/Readers

    # ACL policy for qscc's "GetBlockByNumber" function
    qscc/GetBlockByNumber: /Channel/Application/Readers

    # ACL policy for qscc's  "GetBlockByHash" function
    qscc/GetBlockByHash: /Channel/Application/Readers

    # ACL policy for qscc's "GetTransactionByID" function
    qscc/GetTransactionByID: /Channel/Application/Readers

    # ACL policy for qscc's "GetBlockByTxID" function
    qscc/GetBlockByTxID: /Channel/Application/Readers

    #---Configuration System Chaincode (cscc) function to policy mapping for access control---#

    # ACL policy for cscc's "GetConfigBlock" function
    cscc/GetConfigBlock: /Channel/Application/Readers

    # ACL policy for cscc's "GetConfigTree" function
    cscc/GetConfigTree: /Channel/Application/Readers

    # ACL policy for cscc's "SimulateConfigTreeUpdate" function
    cscc/SimulateConfigTreeUpdate: /Channel/Application/Readers

    #---Miscellanesous peer function to policy mapping for access control---#

    # ACL policy for invoking chaincodes on peer
    peer/Propose: /Channel/Application/Writers

    # ACL policy for chaincode to chaincode invocation
    peer/ChaincodeToChaincode: /Channel/Application/Readers

    #---Events resource to policy mapping for access control###---#

    # ACL policy for sending block events
    event/Block: /Channel/Application/Readers

    # ACL policy for sending filtered block events
    event/FilteredBlock: /Channel/Application/Readers

  Organizations:
  Policies: 
    Readers:
      Type: ImplicitMeta
      Rule: "ANY Readers"
    Writers:
      Type: ImplicitMeta
      Rule: "ANY Writers"
    Admins:
      Type: Signature
      Rule: "OR('org1MSP.admin')"
    CdtPolicy:
      Type: Signature
      Rule: "OR('org1MSP.admin')"

Channel: &ChannelDefaults
  Policies:
    Readers:
      Type: ImplicitMeta
      Rule: "ANY Readers"
    Writers:
      Type: ImplicitMeta
      Rule: "ANY Writers"
    Admins:
      Type: Signature
      Rule: "OR('org1MSP.admin')"

Profiles:
  orderergenesis:
    <<: *ChannelDefaults
    Capabilities:
      <<: *ChannelCapabilities
    Orderer:
      <<: *OrdererDefaults
      Organizations:
        - *Orderer      
      Capabilities:
        <<: *OrdererCapabilities
    Consortiums:
      SampleConsortium:
        Organizations:
          - *org1
          - *org2
          - *org3

  channelone:
    <<: *ChannelDefaults
    Consortium: SampleConsortium
    Application:
      <<: *ApplicationDefaults
      Organizations:
        - *org1
      Capabilities:
        <<: *ApplicationCapabilities

  channeltwo:
    <<: *ChannelDefaults
    Consortium: SampleConsortium
    Application:
      <<: *ApplicationDefaults
      Organizations:
        - *org1
        - *org2
      Capabilities:
        <<: *ApplicationCapabilities

  channeltree:
    <<: *ChannelDefaults
    Consortium: SampleConsortium
    Application:
      <<: *ApplicationDefaults
      Organizations:
        - *org1
        - *org2
        - *org3
      Capabilities:
        <<: *ApplicationCapabilities
